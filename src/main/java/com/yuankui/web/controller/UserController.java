package com.yuankui.web.controller;


import com.yuankui.web.entity.User;
import com.yuankui.web.repository.UserRepository;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


@Controller    // This means that this class is a Controller
@RequestMapping(path = "/user") // This means URL's start with /demo (after Application path)
public class UserController {

  @Autowired // This means to get the bean called userRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  private UserRepository userRepository;

  @PostMapping(path = "/add") // Map ONLY GET Requests
  public String addNewUser(@RequestParam String name, @RequestParam String email) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    User n = new User();
    n.setName(name);
    n.setEmail(email);
    userRepository.save(n);
    return "redirect:/user/all";
  }

  @GetMapping(path = "/all")
  public String getAllUsers(Model model) {
    // This returns a JSON or XML with the users
    Iterable<User> users = userRepository.findAll();
    model.addAttribute("users", users);
    return "user/list";
  }

  @GetMapping(path = "/edit")
  public String editUser() {
    return "user/form";
  }
}